#!/usr/bin/env ruby

require 'eventmachine'
require_relative '../lib/intelligentli'
require_relative '../lib/observation_window'
require_relative '../lib/utilities'

lambda {
  ili = nil
  watchers = []

  Kernel.send :define_method, :login do |*args|
    ili = Intelligentli.new *args
  end

  Kernel.send :define_method, :watch do |uri, options = {}, &block|
    watchers << Proc.new do
      observation = ObservationWindow.new(options)
      ili.watch uri do |message|
        new_data = Utilities.epoch_to_time message[:data], message[:time_precision]
        observation.concat new_data
        block.call observation.data
      end
    end
  end

  Kernel.send :define_method, :run do
    EM.run { watchers.each(&:call) } if watchers.length > 0
  end
}.call

load ARGV[0]

run
